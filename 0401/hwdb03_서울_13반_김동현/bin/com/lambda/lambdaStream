
1. 람다식이란? 
"식별자(클래스이름, 메소드이름)없이 실행가능한 함수"
함수인데 함수를 따로 만들지 않고(메소드 이름이 없음) 
코드 한줄에 함수를 써서 그것을 호출하는 방식.


2. 람다식 사용법
(매개변수, ...) -> { 실행문 ... }
(매개변수, ...) -> { return ... }
( parameters ) -> expression body
( parameters ) -> { expression body }
() -> { expression body }
() -> expression body


3. 람다식의 장점   
  1. 코드를 간결하게 만들 수 있음. 
  2. 가독성이 향상. 
  3. 빠른 코드 작성. 
  4. 병렬프로그래밍이 용이.
  
  
4. 람다식 단점  
  1. 람다를 사용하면서 만드는 무명함수는 재사용이 불가. 
  2. 디버깅 힘듦. 
  3. 코드가 지저분해짐. (함수를 계속 중복생성할 가능성이 높음) 
  4. 재귀로 만들경우에는 다소 부적합한 면이 있음.

5.스트림이란?
람다를 활용할 수 있는 기술 중 하나.
배열 또는 컬렉션 인스턴스에 함수 여러 개를 조합해서 원하는 결과를 필터링하고 가공된 결과를 얻을 때 활용. 
또한 람다를 이용해서 코드의 양을 줄이고 간결하게 표현할 수 있음. 
=> 배열과 컬렉션을 (람다)함수형으로 처리할 수 있음.

6. 스트림의 사용 순서		 
  1. 스트림 생성 
  2. 중간 연산 
  3. 최종 연산